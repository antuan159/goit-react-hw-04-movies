{"version":3,"sources":["components/pages/MovieDetailsPage.module.css","components/Navigation/Navigation.module.css","components/Services/api.js","components/pages/HomePage.js","components/pages/MoviesPage.js","routes.js","components/Navigation/Navigation.js","components/pages/MovieCastPage.js","components/pages/MovieReviewsPage.js","components/pages/MovieDetailsPage.js","components/App/App.js","index.js"],"names":["module","exports","getPopularMovies","a","fetch","res","json","data","results","console","log","getDetailMovie","id","URL","getMoviesCast","getMoviesReviews","searchMovies","query","HomePage","state","movies","fecthPopularMovies","api","setState","this","map","move","key","to","title","Component","MoviesPage","handleChange","e","target","value","handleSubmit","preventDefault","fetchSearchMovies","props","location","history","replace","pathname","search","queryObject","queryString","parse","onSubmit","type","onChange","from","Navigation","className","style","list","exact","routes","MovieCastPage","cast","fecthMovieCast","match","params","moviesId","index","character","name","src","profile_path","alt","MovieReviewsPage","reviews","fecthMovieReviews","length","author","content","MovieDetailsPage","movie","handleGoBack","push","onClick","description","image","backdrop_path","original_title","release_date","slice","vote_average","overview","genres","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b203a3c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MovieDetailsPage_title__3iPFR\",\"description\":\"MovieDetailsPage_description__3nca0\",\"image\":\"MovieDetailsPage_image__1Kxr2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Navigation_list__3QHZq\"};","const getPopularMovies = async () => {\n  const URL =\n    'https://api.themoviedb.org/3/trending/all/day?api_key=96d3e64b658c1ff1e4d321bedcaf7556';\n  try {\n    const res = await fetch(URL);\n    const data = await res.json();\n    return data.results;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nconst getDetailMovie = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}?api_key=96d3e64b658c1ff1e4d321bedcaf7556&language=ru`;\n  try {\n    const res = await fetch(URL);\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nconst getMoviesCast = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=96d3e64b658c1ff1e4d321bedcaf7556`;\n  try {\n    const res = await fetch(URL);\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nconst getMoviesReviews = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=96d3e64b658c1ff1e4d321bedcaf7556&language=en-US&page=1`;\n  try {\n    const res = await fetch(URL);\n    const data = await res.json();\n    return data.results;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nconst searchMovies = async query => {\n  const URL = `https://api.themoviedb.org/3/search/movie?api_key=96d3e64b658c1ff1e4d321bedcaf7556&language=en-US&query=${query}&page=1&include_adult=false`;\n  try {\n    const res = await fetch(URL);\n    const data = await res.json();\n    return data.results;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nexport default {\n  getPopularMovies,\n  getDetailMovie,\n  getMoviesCast,\n  getMoviesReviews,\n  searchMovies,\n};\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../Services/api';\r\n\r\nexport default class HomePage extends Component {\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.fecthPopularMovies();\r\n  }\r\n\r\n  fecthPopularMovies = async () => {\r\n    const movies = await api.getPopularMovies();\r\n    this.setState({ movies });\r\n  };\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Trending today</h1>\r\n        <ul>\r\n          {movies.map(move => (\r\n            <li key={move.id}>\r\n              <Link to={`/movies/${move.id}`}>{move.title}</Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport PropTypes from 'prop-types';\nimport api from '../Services/api';\n\nexport default class MoviesPage extends Component {\n  static propTypes = {\n    location: PropTypes.instanceOf(Object).isRequired,\n    history: PropTypes.instanceOf(Object).isRequired,\n  };\n\n  state = {\n    query: '',\n    movies: null,\n  };\n\n  componentDidMount() {\n    const { location } = this.props;\n    if (!location.search) {\n      return;\n    }\n    const queryObject = queryString.parse(location.search);\n    this.fetchSearchMovies(queryObject.query);\n  }\n\n  handleChange = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.fetchSearchMovies(this.state.query);\n    const { location, history } = this.props;\n\n    history.replace({\n      pathname: location.pathname,\n      search: `?query=${this.state.query}`,\n    });\n\n    this.setState({ query: '' });\n  };\n\n  fetchSearchMovies = async query => {\n    const searchMovies = await api.searchMovies(query);\n    this.setState({ movies: searchMovies });\n  };\n\n  render() {\n    const { query, movies } = this.state;\n    const { location } = this.props;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" value={query} onChange={this.handleChange} />\n          <button type=\"submit\">Search</button>\n        </form>\n        {movies && (\n          <ul>\n            {movies.map(move => (\n              <li key={move.id}>\n                <Link\n                  to={{\n                    pathname: `/movies/${move.id}`,\n                    state: { from: location },\n                  }}\n                >\n                  {move.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","export default {\n  HOME: '/',\n  MOVIES: '/movies',\n  MOVIES_ID: '/movies/:moviesId',\n  MOVIES_CAST: '/movies/:moviesId/Cast',\n  MOVIES_REVIEWS: '/movies/:moviesId/Reviews',\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport routes from '../../routes';\nimport style from './Navigation.module.css';\n\nconst Navigation = () => (\n  <ul className={style.list}>\n    <li>\n      <NavLink exact to={routes.HOME}>\n        Home\n      </NavLink>\n    </li>\n    <li>\n      <NavLink to={routes.MOVIES}>Movies</NavLink>\n    </li>\n  </ul>\n);\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../Services/api';\n\nexport default class MovieCastPage extends Component {\n  static propTypes = {\n    match: PropTypes.instanceOf(Object).isRequired,\n  };\n\n  state = {\n    cast: null,\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n    this.fecthMovieCast(match.params.moviesId);\n  }\n\n  fecthMovieCast = async id => {\n    const data = await api.getMoviesCast(id);\n    this.setState({ cast: data.cast });\n  };\n\n  render() {\n    const { cast } = this.state;\n    return (\n      <div>\n        {cast &&\n          cast.map(index => (\n            <div key={index.id}>\n              <h3>Hero: {index.character}</h3>\n              <p>Actor: {index.name}</p>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${index.profile_path}`}\n                alt=\"photoActor\"\n              />\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../Services/api';\n\nexport default class MovieReviewsPage extends Component {\n  static propTypes = {\n    match: PropTypes.instanceOf(Object).isRequired,\n  };\n\n  state = {\n    reviews: null,\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n    this.fecthMovieReviews(match.params.moviesId);\n  }\n\n  fecthMovieReviews = async id => {\n    const reviews = await api.getMoviesReviews(id);\n    this.setState({ reviews });\n  };\n\n  render() {\n    const { reviews } = this.state;\n    const message = 'We don`t have any reviews for this movie';\n    return (\n      <div>\n        {reviews &&\n          (reviews.length === 0 ? (\n            <p>{message}</p>\n          ) : (\n            reviews.map(index => (\n              <div key={index.id}>\n                <h2>{index.author}</h2>\n                <p>{index.content}</p>\n              </div>\n            ))\n          ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link, Switch, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MovieCastPage from './MovieCastPage';\nimport MovieReviewsPage from './MovieReviewsPage';\nimport routes from '../../routes';\nimport api from '../Services/api';\nimport style from './MovieDetailsPage.module.css';\n\nexport default class MovieDetailsPage extends Component {\n  static propTypes = {\n    match: PropTypes.instanceOf(Object).isRequired,\n    location: PropTypes.instanceOf(Object).isRequired,\n    history: PropTypes.instanceOf(Object).isRequired,\n  };\n\n  state = {\n    movie: null,\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n    this.getDetailMovie(match.params.moviesId);\n  }\n\n  getDetailMovie = async id => {\n    const movie = await api.getDetailMovie(id);\n    this.setState({ movie });\n  };\n\n  handleGoBack = () => {\n    const { location, history } = this.props;\n    if (!location.state) {\n      history.push('/');\n      return;\n    }\n\n    history.push({\n      pathname: '/movies',\n      search: location.state.from.search,\n    });\n  };\n\n  render() {\n    const { match, location } = this.props;\n    const { movie } = this.state;\n    return (\n      <div>\n        {movie && (\n          <div>\n            <button type=\"button\" onClick={this.handleGoBack}>\n              Go back\n            </button>\n            <div className={style.description}>\n              <div className={style.image}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w300${movie.backdrop_path}`}\n                  alt=\"poster\"\n                />\n              </div>\n              <div>\n                <p className={style.title}>\n                  {`${movie.original_title}  (${movie.release_date.slice(\n                    0,\n                    4,\n                  )})`}\n                </p>\n\n                <p>User score: {movie.vote_average * 10}%</p>\n                <p className={style.title}>Overview</p>\n                <p>{movie.overview}</p>\n                <p className={style.title}>Genres</p>\n                <div>\n                  {movie.genres.map(index => (\n                    <span key={index.id}>{index.name} </span>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <ul>\n          <li>\n            <Link\n              to={{\n                pathname: `/movies/${match.params.moviesId}/Cast`,\n                state: location.state,\n              }}\n            >\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={{\n                pathname: `/movies/${match.params.moviesId}/Reviews`,\n                state: location.state,\n              }}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n\n        <Switch>\n          <Route exact path={routes.MOVIES_CAST} component={MovieCastPage} />\n          <Route\n            exact\n            path={routes.MOVIES_REVIEWS}\n            component={MovieReviewsPage}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport HomePage from '../pages/HomePage';\nimport MoviesPage from '../pages/MoviesPage';\nimport Navigation from '../Navigation';\nimport routes from '../../routes';\nimport MovieDetailsPage from '../pages/MovieDetailsPage';\n\nconst App = () => (\n  <BrowserRouter>\n    <Navigation />\n    <Switch>\n      <Route exact path={routes.HOME} component={HomePage} />\n      <Route exact path={routes.MOVIES} component={MoviesPage} />\n      <Route path={routes.MOVIES_ID} component={MovieDetailsPage} />\n      <Redirect to={routes.HOME} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}